($wrapapplicatives)
($define $macro
  ($vau (name args body)
    (eval '$define name (list '$vau args body))))

($macro $lambda (args body)
  (wrap (eval '$vau args body)))

($macro $function (name args body)
  (eval '$define name (list '$lambda args body)))

($function cadr (l) (car (cdr l)))

($macro $defs (...bindings)
  (eval '$mapcar bindings ($vau (binding) (eval '$define (car binding) (cadr binding)))))

($function fact (n)
  ($if (eq n 0)
    1
    (* n (fact (- n 1)))))

($function pow (n p)
  ($if (eq p 0)
    1
    (* n (pow n (- p 1)))))

;; the slow way!
($function fib (n)
  ($if (lt n 2)
    1
    (+ (fib (- n 1)) (fib (- n 2)))))

($defs
  (pi 3.14)
  (testno 100)
  (circ ($lambda (r) (* 2 (* pi r)))))

(log (fact (fib 10)))
