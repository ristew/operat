($wrapapplicatives)

($define $umacro
  ($uvau (name args body)
    (eval '$define name (list '$uvau args body name)) $umacro))

($define $macro
  ($uvau (name args body)
    (eval '$define name (list '$vau args body name)) $macro))

($macro $lambda (args body name)
  (wrap (eval '$uvau args body) name))

($umacro $function (name args body)
  (eval '$define name (list '$lambda args body name)))

($function cadr (l) (car (cdr l)))

($function fact (n)
  ($if (eq n 0)
    1
    (* n (fact (- n 1)))))
(log (fact 10))

($function pow (n p)
  ($if (eq p 0)
    1
    (* n (pow n (- p 1)))))

;; the slow way!
($function fib (n)
  ($if (lt n 2)
    1
    (+ (fib (- n 1)) (fib (- n 2)))))

($logtime (fib 24))
($logtime (nativefib 24))
(log ($compile ($if (lt n 2)
    1
    (+ (fib (- n 1)) (fib (- n 2))))))

